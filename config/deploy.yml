# Name of your application. Used to uniquely configure containers.
service: frigo_hero

# Name of the container image.
image: tibg/frigo_hero

# Deploy to these servers.
servers:
  - 213.32.89.32

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: tibg

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    RAILS_SERVE_STATIC_FILES: true
    RAILS_LOG_TO_STDOUT: true
  secret:
    - POSTGRES_HOST
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - POSTGRES_DB
    - GMAIL_USERNAME
    - GMAIL_PASSWORD
    - GOOGLE_GEOCODING_API_KEY
    - IPINFO_GEOCODING_API_KEY

#Use a different ssh user than root
ssh:
  user: debian

# Configure builder setup.
builder:
  multiarch: false
  dockerfile: './Dockerfile.prod'
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1
volumes:
  - "storage:/docker/app/storage"
# Use accessory services (secrets come from .env).
accessories:
  db:
    host: 213.32.89.32
    port: 5432
    image: 'postgres:latest'
    volumes:
      - postgres:/var/lib/postgresql/data
    env:
      secret:
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
traefik:
  args:
    accesslog: true
    accesslog.format: json
  #   entrypoints.http.address: 80
  #   entrypoints.https.address: 443
  #   entrypoints.http.http.redirections.entryPoint.to: https
  #   entrypoints.http.http.redirections.entryPoint.scheme: https
  #   entrypoints.http.http.redirections.entrypoint.permanent: true
  #   certificatesresolvers.letsencrypt.acme.tlschallenge: true
  #   certificatesresolvers.letsencrypt.acme.email: devwebtg@gmail.com
  #   certificatesresolvers.letsencrypt.acme.storage: /letsencrypt/acme.json

  # volumes:
  #     - ${VOLUME_PATH}letsencrypt:/letsencrypt
  #     - /var/run/docker.sock:/var/run/docker.sock:ro

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
