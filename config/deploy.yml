# Name of your application. Used to uniquely configure containers.
service: frigo_hero

# Name of the container image.
image: tibg/frigo_hero

# Deploy to these servers.
servers:
  web:
    hosts:
      - 213.32.89.32
    # labels:
    #   traefik.http.routers.frigo_hero.rule: Host(`www.frigohero.eu`)
    #   traefik.http.routers.frigo_hero_secure.entrypoints: websecure
    #   traefik.http.routers.frigo_hero_secure.rule: Host(`www.frigohero.eu`)
    #   traefik.http.routers.frigo_hero_secure.tls: true
    #   traefik.http.routers.frigo_hero_secure.tls.certresolver: letsencrypt
    options:
      network: "frigo_hero"
proxy:
  ssl: true
  host: 'www.frigohero.eu'

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: tibg

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    RAILS_SERVE_STATIC_FILES: true
    RAILS_LOG_TO_STDOUT: true
  secret:
    - RAILS_MASTER_KEY

#Use a different ssh user than root
ssh:
  user: debian

# Configure builder setup.
builder:
  arch: amd64
  dockerfile: './Dockerfile.prod'
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1
volumes:
  - "storage:/docker/app/storage"
# Use accessory services (secrets come from .env).
accessories:
  db:
    host: 213.32.89.32
    port: 5432
    image: 'postgres:latest'
    volumes:
      - postgres_fh:/var/lib/postgresql/data
    env:
      secret:
      - POSTGRES_HOST
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    options:
      network: "frigo_hero"
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     entrypoints.web.address: ':80'
#     entrypoints.websecure.address: ':443'
#     certificatesresolvers.letsencrypt.acme.httpchallenge: true
#     certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint: web
#     certificatesresolvers.letsencrypt.acme.email: devwebtg@gmail.com
#     certificatesresolvers.letsencrypt.acme.storage: /letsencrypt/acme.json

#   options:
#     publish:
#       - "443:443"
#     volume:
#       - letsencrypt:/letsencrypt
#     network: "frigo_hero"

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
